#!/usr/bin/env ruby

#!/usr/bin/env ./rprof

# This script is an environment setting helper on the startup.
# 1. set a LD_LIBRARY_PATH(or PATH) value for dynamic libraries.
# 2. restart with above value.
# 3. set a LOAD_PATH value for ruby libraries.

if (ARGV[0] == "-h" || ARGV[0] == "--help")
  puts "Usage: teien file"
  exit
end

require 'rbconfig'
require 'ruby-ois'
require 'ruby-ogre'
require 'ruby-procedural'

top_dir = File.dirname(File.dirname(File.expand_path(__FILE__)))
lib_path  = top_dir  + "/lib"
ois_ext_path  = Ruby::Ois::get_deps_lib_path
ogre_ext_path  = Ruby::Ogre::get_deps_lib_path
pro_ext_path  = Ruby::Procedural::get_deps_lib_path

# needed by dynamic libraries.
if (/mingw/ =~ RUBY_PLATFORM)
  ld_lib_path = ois_ext_path + ";" + ogre_ext_path + ";" + pro_ext_path + ";" + Ruby::Ogre::get_lib_path + ";" + lib_path
  if (ENV["PATH"] == nil)
    ENV["PATH"] =  ld_lib_path
    exec("ruby #{$0} #{ARGV.join(" ")}")
  elsif (!ENV["PATH"].include?(ld_lib_path))
    ENV["PATH"] = ld_lib_path + ";" +ENV["PATH"]
    exec("ruby #{$0} #{ARGV.join(" ")}")
  end
else
  ld_lib_path = ois_ext_path + ":" + ogre_ext_path + ":" + pro_ext_path + ":" + lib_path
  if (ENV["LD_LIBRARY_PATH"] == nil)
    ENV["LD_LIBRARY_PATH"] = ld_lib_path
    exec($0, *ARGV)
  elsif(!ENV["LD_LIBRARY_PATH"].include?(ld_lib_path))
    ENV["LD_LIBRARY_PATH"] = ld_lib_path + ":" + ENV["LD_LIBRARY_PATH"]
    exec($0, *ARGV)
  end
end

$LOAD_PATH.push(lib_path)

load ARGV[0]

=begin
require "teien/core/launcher.rb"

# include standard commands.
require "teien/commands/browser_command"
require "teien/commands/server_command"
require "teien/commands/local_command"
require "teien/commands/new_command"

# include user commands.
Dir.glob("#{Dir.getwd}/commands/*.rb") {|file|
  require "#{file}"
}

Teien::Launcher::launch(ARGV)
=end
